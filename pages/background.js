const u={retentionDays:30,apiEndpoint:"https://api.chroniclesync.xyz",syncIntervalMinutes:30};async function m(){const e=await chrome.storage.sync.get(["config"]);return e.config||await chrome.storage.sync.set({config:u}),e.config||u}const g="chronicleSync",h=1;let c;const w=()=>new Promise((e,n)=>{const t=indexedDB.open(g,h);t.onerror=()=>n(t.error),t.onsuccess=()=>{c=t.result,e(c)},t.onupgradeneeded=a=>{const o=a.target.result.createObjectStore("history",{keyPath:"id",autoIncrement:!0});o.createIndex("urlTime",["url","timestamp"],{unique:!0}),o.createIndex("timestamp","timestamp")}});async function f(e,n,t){const a={url:e,title:n,timestamp:t};return new Promise((i,o)=>{const l=c.transaction(["history"],"readwrite").objectStore("history"),d=l.index("urlTime").get([e,t]);d.onsuccess=()=>{if(d.result)i(null);else{const y=l.add(a);y.onsuccess=()=>i(y.result),y.onerror=()=>o(y.error)}},d.onerror=()=>o(d.error)})}async function p(){const e=await m(),n=Date.now()-e.retentionDays*24*60*60*1e3,i=c.transaction(["history"],"readonly").objectStore("history").index("timestamp"),o=await new Promise((r,l)=>{const s=i.getAll(IDBKeyRange.lowerBound(n));s.onsuccess=()=>r(s.result||[]),s.onerror=()=>l(s.error)});if(o.length>0)try{const r=await fetch(`${e.apiEndpoint}/sync`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({entries:o})});if(!r.ok)throw new Error(`Sync failed: ${r.statusText}`)}catch(r){console.error("Sync error:",r)}}async function b(){try{console.log("Initializing ChronicleSync service worker..."),await w(),console.log("IndexedDB initialized successfully");const e=await m();console.log("Configuration loaded:",e),chrome.alarms.create("syncHistory",{periodInMinutes:e.syncIntervalMinutes}),console.log("Alarm created for periodic sync"),console.log("ChronicleSync service worker initialized successfully")}catch(e){throw console.error("Failed to initialize ChronicleSync service worker:",e),e}}chrome.history.onVisited.addListener(async e=>{e.url&&e.lastVisitTime&&await f(e.url,e.title||"",new Date(e.lastVisitTime).getTime())});chrome.alarms.onAlarm.addListener(e=>{e.name==="syncHistory"&&p()});chrome.tabs.onUpdated.addListener((e,n,t)=>{n.url&&f(n.url,t.title||"",Date.now())});chrome.runtime.onMessage.addListener((e,n,t)=>{if(console.log("Message received:",e),e.type==="getStatus")return t({initialized:c!==void 0,serviceWorkerActive:!0,timestamp:Date.now()}),!0});b().catch(e=>{console.error("Failed to initialize:",e)});
