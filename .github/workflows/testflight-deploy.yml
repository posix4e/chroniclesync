name: Deploy to TestFlight

on:
  push:
    branches:
      - main
    paths:
      - 'safari-ios/**'
      - 'extension/**'
      - '.github/workflows/testflight-deploy.yml'

jobs:
  build-and-deploy:
    name: Build and Deploy to TestFlight
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'extension/package-lock.json'
          
      - name: Install extension dependencies
        run: |
          cd extension
          npm ci
          
      - name: Build Safari extension package
        run: |
          cd extension
          npm run build:extension
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          
      - name: Install Fastlane
        run: gem install fastlane
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'
          
      - name: Setup App Store Connect API Key
        env:
          APPLE_API_KEY_CONTENT: ${{ secrets.APPLE_API_KEY_CONTENT }}
        run: |
          mkdir -p ~/private_keys
          echo "$APPLE_API_KEY_CONTENT" | base64 --decode > ~/private_keys/AuthKey.p8
          
      - name: Build and Deploy to TestFlight
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_IDENTIFIER: ${{ secrets.APPLE_APP_IDENTIFIER }}
        run: |
          cd safari-ios
          
          # Create Fastfile if it doesn't exist
          mkdir -p fastlane
          cat > fastlane/Fastfile << 'EOL'
          default_platform(:ios)
          
          platform :ios do
            desc "Build and upload to TestFlight"
            lane :beta do
              api_key = app_store_connect_api_key(
                key_id: ENV["APPLE_API_KEY_ID"],
                issuer_id: ENV["APPLE_API_KEY_ISSUER_ID"],
                key_filepath: "~/private_keys/AuthKey.p8",
              )
              
              update_code_signing_settings(
                use_automatic_signing: true,
                team_id: ENV["APPLE_TEAM_ID"],
                targets: ["ChronicleSync", "Extension"],
                code_sign_identity: "Apple Development",
                bundle_identifier: ENV["APPLE_APP_IDENTIFIER"]
              )
              
              build_app(
                scheme: "ChronicleSync",
                workspace: "ChronicleSync.xcworkspace",
                export_method: "app-store"
              )
              
              upload_to_testflight(
                api_key: api_key,
                skip_waiting_for_build_processing: true
              )
            end
          end
          EOL
          
          # Create Appfile
          cat > fastlane/Appfile << EOL
          app_identifier("${APPLE_APP_IDENTIFIER}")
          team_id("${APPLE_TEAM_ID}")
          EOL
          
          # Run fastlane
          fastlane beta