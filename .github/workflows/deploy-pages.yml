name: Deploy Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'pages/**'
      - '.github/workflows/deploy-pages.yml'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy Pages to Staging
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json
          
      - name: Install Dependencies
        run: npm ci
        working-directory: pages

      - name: Deploy to Staging
        run: npm run deploy:staging
        working-directory: pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    name: Deploy Pages to Production
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json
          
      - name: Install Dependencies
        run: npm ci
        working-directory: pages

      - name: Deploy to Production
        run: npm run deploy:prod
        working-directory: pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}