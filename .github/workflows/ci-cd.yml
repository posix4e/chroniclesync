name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            pages/package-lock.json
            worker/package-lock.json


      - name: Test Pages
        working-directory: pages
        env:
          API_URL: ${{ github.ref == 'refs/heads/main' && 'https://api.chroniclesync.xyz' || 'https://api-staging.chroniclesync.xyz' }}
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build:extension
          npm run build:web

      - name: Trigger Playwright Tests
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'playwright-tests.yml',
              ref: context.ref,
              inputs: {
                browser: 'chromium',
                debug: 'false'
              }
            });

      - name: Package Chrome Extension
        working-directory: pages
        run: |
          cd ..
          zip -r chrome-extension.zip extension/

      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension
          path: chrome-extension.zip
          retention-days: 14

      - name: Test Worker
        working-directory: worker
        run: npm ci && npm run lint && npm run test:coverage

      - name: Deploy Pages
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main') && success()
        working-directory: pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: if [ "${{ github.ref }}" = "refs/heads/main" ]; then npm run deploy -- --branch main --commit-dirty=true; else npm run deploy -- --branch ${{ github.head_ref }} --commit-dirty=true; fi

      - name: Deploy Worker
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main') && success()
        working-directory: worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: if [ "${{ github.ref }}" = "refs/heads/main" ]; then npm run deploy -- --env production; else npm run deploy -- --env staging; fi

      - name: Upload Test Results
        if: always()  # Always upload test results for better debugging
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            pages/playwright-report/
            pages/test-results/
          retention-days: 30