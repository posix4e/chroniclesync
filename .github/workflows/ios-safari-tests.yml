name: iOS Safari Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on macOS
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: extension/package-lock.json
      
      - name: Install dependencies
        run: |
          cd extension
          npm ci
      
      - name: Install Playwright browsers
        run: |
          cd extension
          npx playwright install --with-deps webkit
      
      - name: Build extension
        run: |
          cd extension
          npm run build
      
      - name: Start iOS Simulator
        run: |
          # List available simulators
          xcrun simctl list devices available
          
          # Boot an iPhone simulator
          SIMULATOR_NAME="iPhone 14"
          SIMULATOR_UDID=$(xcrun simctl list devices available | grep "$SIMULATOR_NAME" | grep -E -o -i "([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" | head -1)
          
          if [ -z "$SIMULATOR_UDID" ]; then
            echo "Could not find iPhone 14 simulator, trying iPhone 13"
            SIMULATOR_NAME="iPhone 13"
            SIMULATOR_UDID=$(xcrun simctl list devices available | grep "$SIMULATOR_NAME" | grep -E -o -i "([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" | head -1)
          fi
          
          if [ -z "$SIMULATOR_UDID" ]; then
            echo "Could not find simulator, using first available iPhone"
            SIMULATOR_UDID=$(xcrun simctl list devices available | grep "iPhone" | grep -E -o -i "([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" | head -1)
          fi
          
          echo "Using simulator with UDID: $SIMULATOR_UDID"
          xcrun simctl boot "$SIMULATOR_UDID"
          
          # Wait for simulator to boot
          sleep 10
          
          # Open Safari
          xcrun simctl openurl "$SIMULATOR_UDID" "https://www.example.com"
          
          # Wait for Safari to open
          sleep 5
      
      - name: Start test server
        run: |
          cd extension
          # Start a simple web server to serve test content
          npx http-server -p 8080 --cors -a 0.0.0.0 &
          # Wait for server to start
          sleep 5
          # Set environment variables for tests
          echo "WEB_APP_URL=http://localhost:8080" >> $GITHUB_ENV
          echo "API_URL=https://api-staging.chroniclesync.xyz" >> $GITHUB_ENV
      
      - name: Run Playwright tests for iOS Safari
        run: |
          cd extension
          mkdir -p test-results/ios-safari
          BROWSER=ios-safari npx playwright test --project=ios-safari
      
      - name: Run specific test files
        if: always()
        run: |
          cd extension
          # Run each test file separately to isolate failures
          BROWSER=ios-safari npx playwright test e2e/ios-safari.spec.ts --project=ios-safari
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-ios
          path: extension/test-results/
          retention-days: 30
      
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ios-safari-screenshots
          path: extension/test-results/ios-safari/
          retention-days: 30