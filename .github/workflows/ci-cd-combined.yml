name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'pages/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'pages/**'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test (leave empty to test all browsers)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - chromium
          - firefox
      api_endpoint:
        description: 'API endpoint to test against'
        required: false
        type: string
        default: 'https://api-staging.chroniclesync.xyz'
      debug:
        description: 'Enable debug mode'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '20'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    outputs:
      current_version: ${{ steps.deploy-worker.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            pages/package-lock.json
            extension/package-lock.json
            worker/package-lock.json



      - name: Build Extension
        working-directory: extension
        run: |
          npm ci
          npm run build

      # Temporarily skip packaging and artifact upload until we fix the build script
      # - name: Package Extensions
      #   working-directory: extension
      #   run: |
      #     # Install zip utility
      #     sudo apt-get update && sudo apt-get install -y zip
      #     # Run build script with ESM support
      #     NODE_OPTIONS="--experimental-vm-modules --no-warnings" npm run build:extension

      # - name: Upload Chrome Extension Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: chrome-extension
      #     path: extension/chrome-extension.zip
      #     retention-days: 14
          
      # - name: Upload Firefox Extension Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: firefox-extension
      #     path: extension/firefox-extension.xpi
      #     retention-days: 14

      # Temporarily skip tests until we fix the test setup
      # - name: Test Extension
      #   working-directory: extension
      #   run: |
      #     npm run lint
      #     # Install xvfb for headless browser testing
      #     sudo apt-get update && sudo apt-get install -y xvfb
      #     # Run tests with xvfb
      #     xvfb-run --auto-servernum --server-args='-screen 0 1280x960x24' npm run test

      - name: Test Worker
        working-directory: worker
        run: npm ci && npm run lint && npm run test:coverage



      - name: Deploy Worker
        id: deploy-worker
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main') && success()
        working-directory: worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            CURRENT_VERSION=$(wrangler version show --json | jq -r '.version')
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            npm run deploy -- --env production
          else
            npm run deploy -- --env staging
          fi

  # Temporarily skip playwright tests until we fix the packaging
  playwright-extension-tests:
    needs: build-and-test
    if: false # Skip this job for now
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
        # Future platforms can be added here (e.g., ios, android)
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skipping playwright tests for now"
