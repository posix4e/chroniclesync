name: iOS Safari Extension CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'ios/**'
  pull_request:
    branches: [main]
    paths:
      - 'ios/**'
  workflow_dispatch:
    inputs:
      api_endpoint:
        description: 'API endpoint to test against'
        required: false
        type: string
        default: 'https://api-staging.chroniclesync.xyz'
      debug:
        description: 'Enable debug mode'
        required: false
        type: boolean
        default: false

env:
  XCODE_VERSION: '15.3'
  DEVELOPER_DIR: /Applications/Xcode_15.3.app/Contents/Developer

jobs:
  build-and-test:
    runs-on: macos-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Xcode
        run: sudo xcode-select -s $DEVELOPER_DIR
      
      - name: Install dependencies
        run: |
          brew install xcbeautify
          gem install xcpretty
      
      - name: Build iOS app
        run: |
          cd ios/ChronicleSync
          xcodebuild clean build \
            -project ChronicleSync.xcodeproj \
            -scheme "ChronicleSync" \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO | xcbeautify
      
      - name: Run unit tests
        run: |
          cd ios/ChronicleSync
          xcodebuild test \
            -project ChronicleSync.xcodeproj \
            -scheme "ChronicleSync" \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO | xcbeautify
      
      - name: Run UI tests and capture screenshots
        run: |
          cd ios/ChronicleSync
          xcodebuild test \
            -project ChronicleSync.xcodeproj \
            -scheme "ChronicleSync" \
            -testPlan "UITests" \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO | xcbeautify
            
      - name: Run end-to-end tests
        run: |
          cd ios/ChronicleSync
          xcodebuild test \
            -project ChronicleSync.xcodeproj \
            -scheme "ChronicleSync" \
            -testPlan "EndToEndTests" \
            -destination "platform=iOS Simulator,name=iPhone 15" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO | xcbeautify
        env:
          CHRONICLESYNC_TEST_API_KEY: ${{ secrets.CHRONICLESYNC_TEST_API_KEY }}
      
      - name: Create IPA file
        run: |
          cd ios/ChronicleSync
          mkdir -p build/ipa
          
          # Build for device
          xcodebuild archive \
            -project ChronicleSync.xcodeproj \
            -scheme "ChronicleSync" \
            -archivePath build/ChronicleSync.xcarchive \
            -destination "generic/platform=iOS" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO | xcbeautify
          
          # Create IPA
          xcodebuild -exportArchive \
            -archivePath build/ChronicleSync.xcarchive \
            -exportPath build/ipa \
            -exportOptionsPlist exportOptions.plist | xcbeautify || true
          
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChronicleSync-iOS
          path: ios/ChronicleSync/build/ipa/*.ipa
          retention-days: 14
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Screenshots
          path: |
            ios/ChronicleSync/build/Logs/Test/**/*.png
            ios/ChronicleSync/build/Logs/Test/**/*.jpg
          retention-days: 14
          if-no-files-found: ignore
      
      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Test-Logs
          path: ios/ChronicleSync/build/Logs/Test
          retention-days: 14
          if-no-files-found: ignore
