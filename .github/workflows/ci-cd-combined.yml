name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
      api_endpoint:
        description: 'API endpoint to test against'
        required: false
        type: string
        default: 'https://api-staging.chroniclesync.xyz'
      debug:
        description: 'Enable debug mode'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '18'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    outputs:
      current_version: ${{ steps.deploy-worker.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            pages/package-lock.json
            worker/package-lock.json

      - name: Test Pages
        working-directory: pages
        env:
          API_URL: ${{ github.ref == 'refs/heads/main' && 'https://api.chroniclesync.xyz' || 'https://api-staging.chroniclesync.xyz' }}
        run: |
          npm ci
          npm run lint
          npm run test
          npm run build:extension
          npm run build:web

      - name: Package Chrome Extension
        working-directory: pages
        run: |
          cd ..
          zip -r chrome-extension.zip extension/

      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension
          path: chrome-extension.zip
          retention-days: 14

      - name: Test Worker
        working-directory: worker
        run: npm ci && npm run lint && npm run test:coverage

      - name: Deploy Pages
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main') && success()
        working-directory: pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: if [ "${{ github.ref }}" = "refs/heads/main" ]; then npm run deploy -- --branch main --commit-dirty=true; else npm run deploy -- --branch ${{ github.head_ref }} --commit-dirty=true; fi

      - name: Deploy Worker
        id: deploy-worker
        if: (github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main') && success()
        working-directory: worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            CURRENT_VERSION=$(wrangler version show --json | jq -r '.version')
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            npm run deploy -- --env production
          else
            npm run deploy -- --env staging
          fi

  playwright-tests:
    needs: build-and-test
    if: success() && (github.event_name != 'workflow_dispatch' || inputs.browser != '')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: pages/package-lock.json

      - name: Install dependencies
        working-directory: pages
        run: |
          npm ci
          npx playwright install --with-deps ${{ github.event.inputs.browser || 'chromium' }}

      - name: Build extension
        working-directory: pages
        env:
          API_URL: ${{ github.event.inputs.api_endpoint || (github.ref == 'refs/heads/main' && 'https://api.chroniclesync.xyz' || 'https://api-staging.chroniclesync.xyz') }}
        run: npm run build:extension

      - name: Run Playwright tests
        working-directory: pages
        env:
          DEBUG: ${{ github.event.inputs.debug && 'pw:api' || '' }}
          PWDEBUG: ${{ github.event.inputs.debug && '1' || '' }}
          API_URL: ${{ github.event.inputs.api_endpoint || (github.ref == 'refs/heads/main' && 'https://api.chroniclesync.xyz' || 'https://api-staging.chroniclesync.xyz') }}
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" \
            npx playwright test --project=${{ github.event.inputs.browser || 'chromium' }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.event.inputs.browser || 'chromium' }}
          path: |
            pages/playwright-report/
            pages/test-results/
          retention-days: 30

      - name: Rollback on failure
        if: failure() && github.ref == 'refs/heads/main'
        working-directory: worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler rollback --version ${{ needs.build-and-test.outputs.current_version }}